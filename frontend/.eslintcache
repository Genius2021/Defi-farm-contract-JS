[{"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\index.js":"1","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\App.js":"3","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\Header.js":"4","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\Main.js":"5","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\yourWallet\\YourWallet.js":"6","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\yourWallet\\StakeForm.js":"7","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\yourWallet\\WalletBalance.js":"8","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\hooks\\useStakeTokens.js":"9","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\BalanceMsg.js":"10","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\stakeInfo\\StakeInformation.js":"11","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\stakeInfo\\StakedAmount.js":"12","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\hooks\\useUnstakeTokens.js":"13"},{"size":500,"mtime":1654353910137,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1653501197285,"results":"16","hashOfConfig":"15"},{"size":518,"mtime":1654612747774,"results":"17","hashOfConfig":"15"},{"size":1020,"mtime":1654713066362,"results":"18","hashOfConfig":"15"},{"size":2313,"mtime":1655482141299,"results":"19","hashOfConfig":"15"},{"size":2276,"mtime":1655321700821,"results":"20","hashOfConfig":"15"},{"size":3076,"mtime":1655331179996,"results":"21","hashOfConfig":"15"},{"size":701,"mtime":1655482661720,"results":"22","hashOfConfig":"15"},{"size":2385,"mtime":1655471499838,"results":"23","hashOfConfig":"15"},{"size":785,"mtime":1654768801274,"results":"24","hashOfConfig":"15"},{"size":2323,"mtime":1655480147052,"results":"25","hashOfConfig":"15"},{"size":855,"mtime":1655293749842,"results":"26","hashOfConfig":"15"},{"size":2050,"mtime":1655292558452,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"c6r1lx",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\index.js",[],["60","61"],"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\App.js",[],"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\Header.js",[],"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\Main.js",[],"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\yourWallet\\YourWallet.js",[],"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\yourWallet\\StakeForm.js",["62","63","64"],"import { useEthers, useTokenBalance, useNotifications } from '@usedapp/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ethers, utils } from \"ethers\";\r\nimport { Button, Input, CircularProgress, Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport useStakeTokens from '../../hooks/useStakeTokens';\r\n\r\n\r\nfunction StakeForm({token}) {\r\n    const {address: tokenAddress } = token;\r\n    const {notifications} = useNotifications();\r\n\r\n\r\n    const [amount, setAmount] = useState('');\r\n    const handleInputChange = (e)=>{\r\n        const newAmount = Number(e.target.value)\r\n        setAmount(newAmount)\r\n    }\r\n\r\n    const {approveAndStake, state: approveAndStakeERC20State} = useStakeTokens(tokenAddress)\r\n\r\n    const handleStakeSubmit = ()=>{\r\n        const amountAsWei = utils.parseEther(amount.toString())\r\n        console.log(\"The staked amount in wei is \", amountAsWei)\r\n        setAmount(\"\")\r\n        return approveAndStake(amountAsWei)\r\n    }\r\n\r\n    const isMining = approveAndStakeERC20State.status === \"Mining\"\r\n    const [showERC20ApprovalSuccess, setShowERC20ApprovalSuccess] = useState(false)\r\n    const [showStakeTokenSuccess, setShowStakeTokenSuccess] = useState(false)\r\n\r\n    const handleCloseSnack =()=>{\r\n        setShowERC20ApprovalSuccess(false)\r\n        setShowStakeTokenSuccess(false)\r\n\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(notifications.filter(notification =>( //filter takes in a function\r\n            notification.type === \"transactionSucceed\" &&\r\n            notification.transactionName === \"Approve ERC20 transfer\"\r\n        )).length > 0){\r\n            setShowERC20ApprovalSuccess(true)\r\n            setShowStakeTokenSuccess(false)\r\n\r\n        }\r\n\r\n        if(notifications.filter(notification =>( //filter takes in a function\r\n            notification.type === \"transactionSucceed\" &&\r\n            notification.transactionName === \"Stake Tokens\"\r\n        )).length > 0){\r\n            setShowERC20ApprovalSuccess(false)\r\n            setShowStakeTokenSuccess(true)\r\n        }\r\n\r\n    }, [notifications, showERC20ApprovalSuccess, showStakeTokenSuccess])\r\n\r\n  return (\r\n    <>\r\n        <Input onChange={handleInputChange} type=\"number\" size=\"small\" value={amount} />\r\n        <Button\r\n        onClick={handleStakeSubmit}\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        size=\"medium\"\r\n        disabled={amount === \"\" || isMining }\r\n        >{isMining ? <CircularProgress size={20} /> : \"Stake\" }</Button>\r\n        <Snackbar open={showERC20ApprovalSuccess} onClose={handleCloseSnack} autoHideDuration={5000} >\r\n            <Alert onClose={handleCloseSnack} severity=\"success\">\r\n                ERC20 token transfer approved! Now, confirm the transaction.\r\n            </Alert>\r\n        </Snackbar>\r\n        <Snackbar open={showStakeTokenSuccess} onClose={handleCloseSnack} autoHideDuration={5000} >\r\n            <Alert onClose={handleCloseSnack} severity=\"success\">\r\n                Tokens staked!\r\n            </Alert>\r\n        </Snackbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StakeForm ","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\yourWallet\\WalletBalance.js",[],"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\hooks\\useStakeTokens.js",["65"],"C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\BalanceMsg.js",["66"],"import {makeStyles} from \"@material-ui/core\";\r\nimport useStakeTokens from \"../hooks/useStakeTokens\"\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    container: {\r\n        display: \"inline-grid\",\r\n        gridTemplateColumns: \"auto auto auto\",\r\n        gap: theme.spacing(1),\r\n        alignItems: \"center\"\r\n        \r\n    },\r\n    tokenImg: {\r\n        width: \"32px\"\r\n    },\r\n    amount: {\r\n        fontWeight: 700\r\n    }\r\n}))\r\n\r\nfunction BalanceMsg({label, amount, tokenImageSrc}) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n    <div className={classes.container}>\r\n        <div>{label}</div>\r\n        <div className={classes.amount}>{amount}</div>\r\n        <img className={classes.tokenImg} src={tokenImageSrc}  alt=\"token logo\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BalanceMsg","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\stakeInfo\\StakeInformation.js",["67","68"],"import { useEffect, useState } from \"react\";\r\nimport { Box, Button, Tab } from \"@material-ui/core\";\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\r\nimport StakedAmount from \"./StakedAmount\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport useUnstakeTokens from \"../../hooks/useUnstakeTokens\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    gap: theme.spacing(4),\r\n  },\r\n  box: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"25px\",\r\n  },\r\n  header: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst StakeInformation = ({ supportedTokens }) => {\r\n  const classes = useStyles();\r\n  const { account } = useEthers();\r\n  const [selectedTokenIndex, setSelectedTokenIndex] = useState(0);\r\n\r\n  const {address} = supportedTokens[selectedTokenIndex]\r\n\r\n\r\n  const handleChange = (e, newValue) => {\r\n    setSelectedTokenIndex(parseInt(newValue));\r\n  };\r\n\r\n  const {unstakeSend, stakedBalance, state: unstakeState} = useUnstakeTokens(address)\r\n\r\n    const handleUnstake = ()=>{\r\n      unstakeSend(address)\r\n    }\r\n\r\n  return (\r\n    <Box sx={{mb:\"3rem\"}}>\r\n      {account && <h2 className={classes.header}>Stake Information</h2>}\r\n      <Box className={classes.box}>\r\n        {account && (\r\n          <TabContext value={String(selectedTokenIndex)}>\r\n            <TabList onChange={handleChange} aria-label=\"stake form tabs\">\r\n              {supportedTokens.map((token, index) => {\r\n                return (\r\n                  <Tab key={index} label={token.name} value={String(index)} />\r\n                );\r\n              })}\r\n            </TabList>\r\n            {supportedTokens.map((token, index) => {\r\n              return (\r\n                <TabPanel key={index} value={String(index)}>\r\n                  <Box className={classes.tabContent}>\r\n                    <StakedAmount token={token} stakedBalance={stakedBalance} />\r\n                    <Button color=\"primary\" variant=\"contained\" disableElevation size=\"medium\" onClick={handleUnstake}>Unstake</Button>\r\n                  </Box>\r\n                </TabPanel>\r\n              );\r\n            })}\r\n          </TabContext>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StakeInformation;\r\n","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\components\\stakeInfo\\StakedAmount.js",["69"],"// import { useEthers, useTokenAllowance } from \"@usedapp/core\";\r\nimport { ethers, constants } from \"ethers\";\r\nimport BalanceMsg from \"../BalanceMsg\";\r\n// import networkMapping from \"../../chain-info/deployments/map.json\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nexport default function StakedAmount({ token, stakedBalance }) {\r\n    const { image, name } = token;\r\n    // const tokenFarmAddress = chainId ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero;\r\n    const formattedTokenBalance = stakedBalance ? parseInt(ethers.utils.formatEther(stakedBalance.toString())) : 0 ;\r\n\r\n      useEffect(()=>{\r\n    console.log(stakedBalance, \"is\")\r\n   }, [stakedBalance])\r\n\r\n    return (\r\n      <BalanceMsg \r\n        label={`${name} staked is: `}\r\n        tokenImageSrc={image}\r\n        amount={formattedTokenBalance}\r\n      />\r\n  )\r\n}\r\n\r\n","C:\\Users\\JERRY\\Desktop\\Smart Contracts projects\\Brownie-projects\\Defi-farm-contract-JS\\frontend\\src\\hooks\\useUnstakeTokens.js",["70","71"],"import { constants, utils } from \"ethers\";\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport TokenFarm from \"../chain-info/contracts/TokenFarm.json\"\r\nimport ERC20 from \"../chain-info/interfaces/IERC20.json\"\r\nimport networkMapping from \"../chain-info/deployments/map.json\";\r\nimport { useEthers, useContractFunction, useCall, useContractCall } from \"@usedapp/core\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nfunction useUnstakeTokens(tokenAddress) {\r\n    const {chainId, account } = useEthers();\r\n    const {abi} = TokenFarm\r\n    const tokenFarmAddress = chainId ? networkMapping[String(chainId)][\"TokenFarm\"][0] : constants.AddressZero;\r\n    const tokenFarmInterface = new utils.Interface(abi)\r\n    const tokenFarmContract = new Contract(tokenFarmAddress, tokenFarmInterface)\r\n    \r\n    // const erc20ABI = ERC20.abi\r\n    // const erc20Interface = new utils.Interface(erc20ABI)\r\n    // const erc20Contract = new Contract(tokenAddress, erc20Interface)\r\n\r\n    const { send: unstakeSend , state: unstakeState} = useContractFunction(tokenFarmContract, \"unstakeTokens\", {transactionName: \"Unstake ERC20 token\"})\r\n    const value = useContractCall({abi: tokenFarmInterface, address: tokenFarmAddress, method: \"getStakingBalance\", args: [tokenAddress, account] })\r\n    // const { value , error } = useCall({contract: tokenFarmContract, method: \"getStakingBalance\", args: [tokenAddress, account] })\r\n    \r\n    const [state, setState] = useState(unstakeState)\r\n    const [stakedBalance, setStakedBalance] = useState(0)\r\n\r\n    // const unstake = ()=>{\r\n    //     return unstakeSend(tokenAddress)\r\n    //   }\r\n    \r\n    useEffect(()=>{\r\n      setStakedBalance(parseInt(value))\r\n      console.log(parseInt(value), 222)\r\n    }, [tokenAddress, value])\r\n\r\n    \r\n    useEffect(()=>{\r\n      //if the approval was successful then you stake\r\n      if(unstakeState.status === \"Success\"){\r\n        setState(unstakeState) \r\n      }\r\n    }, [unstakeState])\r\n    \r\n\r\n  return { unstakeSend, stakedBalance, state }\r\n}\r\n\r\nexport default useUnstakeTokens",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":1,"column":21,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"81","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":43,"column":8,"nodeType":"84","endLine":43,"endColumn":64,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"86","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":22},{"ruleId":"76","severity":1,"message":"87","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":19},{"ruleId":"76","severity":1,"message":"88","line":37,"column":45,"nodeType":"78","messageId":"79","endLine":37,"endColumn":57},{"ruleId":"76","severity":1,"message":"89","line":2,"column":18,"nodeType":"78","messageId":"79","endLine":2,"endColumn":27},{"ruleId":"76","severity":1,"message":"90","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":13},{"ruleId":"76","severity":1,"message":"91","line":6,"column":42,"nodeType":"78","messageId":"79","endLine":6,"endColumn":49},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useEthers' is defined but never used.","Identifier","unusedVar","'useTokenBalance' is defined but never used.","'ethers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stakeSend'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'useStakeTokens' is defined but never used.","'useEffect' is defined but never used.","'unstakeState' is assigned a value but never used.","'constants' is defined but never used.","'ERC20' is defined but never used.","'useCall' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [approveAndStakeERC20State, amountToStake, tokenAddress, stakeSend]",{"range":"97","text":"98"},[1811,1867],"[approveAndStakeERC20State, amountToStake, tokenAddress, stakeSend]"]